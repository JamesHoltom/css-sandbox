:root {
  --world-container-width: 640px;
  --world-container-height: 480px;
  --world-origin-x: calc(var(--world-container-width) * 0.5);
  --world-origin-y: var(--world-container-height);
  --world-origin-z: calc(var(--world-container-height) * -1);
}

@keyframes node-selected {
  from {
    border: 1px solid darkgoldenrod;
  }

  to {
    border: 6px solid orange;
  }
}

@keyframes node-hover {
  from {
    border: 1px solid darkgreen;
  }

  to {
    border: 6px solid greenyellow;
  }
}

.tab[data-tab="world"] > .container {
  width: var(--world-container-width);
  height: var(--world-container-height);
}

.tab[data-tab="world"] > .tablist {
  width: var(--world-container-width);
  margin: 0 6px;
}

#world-debug {
  position: absolute;
  background: rgb(255 255 255 / .75);
  z-index: 99999;
  user-select: none;
}

#world-pause {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background: rgb(33 33 33 / .65);
  z-index: 999999;
}

#world-pause > span {
  color: white;
  font-weight: bold;
  user-select: none;
}

#world-edit,
 #world-saveload {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  width: 256px;
  height: calc(100% - 12px);
  padding: 6px;
  border-left: 3px solid darkgray;
  background-color: white;
}

#world-edit span {
  display: block;
}

#world-edit > #world-edit-parameters {
  overflow-y: scroll;
}

#world {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
}

#world-camera {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
}

#world .world-node {
  position: absolute;
  top: -50%;
  left: -50%;
  backface-visibility: hidden;
  transform-origin: center center 0;
  transform-style: preserve-3d;
}

#world .world-node[data-node-type="face"] {
  box-sizing: border-box;
}

#world .world-node[data-node-type="group"] {
  width: 0;
  height: 0;
  line-height: 0;
}

#world[data-editing] .world-node[data-selected]:not([data-node-type="group"]) {
  animation: node-selected 0.4s linear infinite alternate;
}

#world[data-editing] .world-node:hover[data-node-type="face"]:not([data-selected]),
 #world[data-editing] .world-node:hover[data-node-type="sprite"]:not([data-selected]) {
  animation: node-hover 0.4s linear infinite alternate;
}

#world-nodemap .world-node {
  border: 1px solid darkgray;
  padding: 6px;
  background-color: white;
  user-select: none;
}

#world-nodemap .world-node[data-selected] {
  background-color: darkgray;
}

#world-saveload textarea {
  width: calc(100% - 12px);
  height: 640px;
  resize: none;
}